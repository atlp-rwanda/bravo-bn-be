name: CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:14
        env:
          DATABASE_HOST: ${{secrets.DATABASE_HOST}}
          DATABASE_USER: ${{secrets.DATABASE_USER}}
          TEST_DATABASE: ${{secrets.TEST_DATABASE}}
          DATABASE_PASSWORD: ${{secrets.TEST_DB_PASSWORD}}
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          NODE_ENV: ${{secrets.NODE_ENV}}
          PORT: ${{secrets.PORT}}
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          JWT_EXPIRES_IN: ${{secrets.JWT_EXPIRES_IN}}
          JWT_COOKIE_EXPIRES_IN: ${{secrets.JWT_COOKIE_EXPIRES_IN}
        ports:
          - 5432:5432  
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run build --if-present
    - run: npm test